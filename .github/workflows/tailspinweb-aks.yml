name: Tailspin Web Kubernetes

on:
  push: 
    branches: 
      - trunk
    paths:
      - .github/workflows/tailspinweb-cicd.yml
      - Tailspin.SpaceGame.Web/**
      - manifests/webdeployments.yml
  workflow_dispatch:
  
jobs:
  dockerpush:
    name: DOCKER BUILD & PUSH
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
      
      - name: Configure App Settings
        uses: cschleiden/replace-tokens@v1
        with: 
         files: '["Tailspin.SpaceGame.Web/appsettings.json"]'
        env:
         LEADERBOARD_API_URL: ${{secrets.API_CLUSTER_IP}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Tailspin.SpaceGame.Web/Dockerfile
          push: true
          tags: |
            ghcr.io/canarysplayground/spacegameweb:latest
            ghcr.io/canarysplayground/spacegameweb:${{ steps.date.outputs.date }}.${{ github.run_number }}
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
  AKS_deploy:
    name: AKS DEPLOY
    environment: 
      name: AKS Cluster
      url: http://52.188.25.119/
    runs-on: ubuntu-latest
    needs: dockerpush
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2   
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AKS_CREDS }}
  
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AKS_CREDS }}
        resource-group: aks-test
        cluster-name: tailspin-space
    
    - uses: azure/k8s-create-secret@v1
      name: Create imagepullsecret for ACR
      with:
        container-registry-url: ghcr.io
        container-registry-username: ${{ github.repository_owner }}
        container-registry-password: ${{ secrets.CR_PAT }}
        secret-name: aks-connection
        
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1
      with:       
        manifests: manifests/webdeployments.yml      
        images: ghcr.io/canarysplayground/spacegameweb:${{ steps.date.outputs.date }}.${{ github.run_number }}
        imagepullsecrets: |
          aks-connection
        force: true
   
  # build:
  #   name: DOTNET BUILD
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
      
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: 3.1.301
        
  #   - name: Configure App Settings
  #     uses: cschleiden/replace-tokens@v1
  #     with: 
  #      files: '["Tailspin.SpaceGame.Web/appsettings.json"]'
  #     env:
  #      LEADER_BOARD_FUNCTION_URL: https://leaderboardsgh.azurewebsites.net/api/Leaderboard
        
  #   - name: Restore dependencies
  #     run: dotnet restore
  #     working-directory: ./Tailspin.SpaceGame.Web
      
  #   - name: Build
  #     run: dotnet build --no-restore
  #     working-directory: ./Tailspin.SpaceGame.Web
      
  #   - name: Test
  #     run: dotnet test --no-build --verbosity normal
  #     working-directory: ./Tailspin.SpaceGame.Web
    
  #   - name: Publish
  #     run: dotnet publish --no-restore -c Release
  #     working-directory: ./Tailspin.SpaceGame.Web
    
  #   - name: Upload a Build Artifact
  #     uses: actions/upload-artifact@v2.2.1
  #     with:
  #       name: drop
  #       path: ./Tailspin.SpaceGame.Web/bin/Release/netcoreapp3.1/publish/
        
  # appservicedeploy:
  #   name: AZURE APP SERVICE DEPLOY
  #   if: github.event.inputs.deploy_or_not == 'true'
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: Web App
  #     url: https://spacewebgh.azurewebsites.net/
  #   needs:
  #   - build
  #   - dockerpush
  #   steps:
      
  #   - name: Download a Build Artifact
  #     uses: actions/download-artifact@v2.0.7
  #     with:
  #       name: drop
        
  #   - name: Azure Login
  #     uses: Azure/login@v1.1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDS }}
        
  #   - name: Azure WebApp
  #     uses: Azure/webapps-deploy@v2
  #     with:
  #       app-name: spacewebgh
  #       package: .
